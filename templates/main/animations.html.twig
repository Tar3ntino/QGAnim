{# templates/animations.html.twig #}
{% extends "base.html.twig" %}

{% block title %}
	QG Animation | Animations
{% endblock %}

{% block stylesheets %}

<style>
/* Animation carousel 3D  - Cells */

/* Préparation de la scène La première chose à faire lors de la construction d'un modèle 3D est de créer un élément qui joue le rôle de scène.
    - Définissez la profondeur de la scène à l'aide de la propriété de perspective CSS:
    - Définir une valeur plus grande pour la propriété perspective crée un effet 3D moins visible, tandis qu'un plus petit le rend plus prononcé.
    - Une valeur d'environ 800 pixels convient généralement à la plupart des petits objets, mais si vous créez quelque chose de plus grand (comme un gratte-ciel), vous pouvez utiliser une valeur inférieure pour créer des angles plus prononcés.
    - Lors de la définition de la propriété de perspective, vous devez également définir l'origine de la perspective (propriété qui détermine la position de la caméra virtuelle face à la scène), positionnée sur les axes X et Y.
 */

/* Un élément en position RELATIVE est calculé d'après sa position originale dans la page. */

.scene {
    border: 1px solid #CCC;
    margin: 40px 0;
    position: relative;
    width: 210px;
    height: 140px;
    margin: 120px auto;
    perspective: 1000px;
}

/*Propriété CSS du .carousel: 
    - width : 100% prend la taille de 100% de la div parent "scene" par defaut mais on le précise quand même 
    - height : à l'inverse de width; il est important de spécifier que l'on souhaite garder une hauteur de 100% pour que la div s'affiche correctement dans la scene en absence de contenu
*/

.carousel {
    width: 100%;
    height: 100%;
    position: absolute;
    transform: translateZ(-288px);
    transform-style: preserve-3d;
    transition: transform 1s;
}

.carousel__cell {
    position: absolute;
    width: 190px;
    height: 120px;
    left: 10px;
    top: 10px;
    border: 2px solid black;
    line-height: 116px;
    font-size: 80px;
    font-weight: bold;
    color: white;
    text-align: center;
    transition: transform 1s, opacity 1s;
}

/* LA PSEUDO CLASS :
https://developer.mozilla.org/fr/docs/Web/CSS/:nth-child

nth-child(9n+1) permet de cibler les éléments fils 1,10,19...etc.*/

/* GESTION DES COULEURS SUR CHAQUE ANIMATION */
/*

.carousel__cell:nth-child(9n+1) {
    background: hsla(0, 100%, 50%, 0.8);
}


.carousel__cell:nth-child(9n+2) {
    background: hsla(40, 100%, 50%, 0.8);
}

.carousel__cell:nth-child(9n+3) {
    background: hsla(80, 100%, 50%, 0.8);
}

.carousel__cell:nth-child(9n+4) {
    background: hsla(120, 100%, 50%, 0.8);
}

.carousel__cell:nth-child(9n+5) {
    background: hsla(160, 100%, 50%, 0.8);
}

.carousel__cell:nth-child(9n+6) {
    background: hsla(200, 100%, 50%, 0.8);
}

.carousel__cell:nth-child(9n+7) {
    background: hsla(240, 100%, 50%, 0.8);
}

.carousel__cell:nth-child(9n+8) {
    background: hsla(280, 100%, 50%, 0.8);
}

.carousel__cell:nth-child(9n+0) {
    background: hsla(320, 100%, 50%, 0.8);
}

.carousel__cell:nth-child(1) {
    transform: rotateY(0deg) translateZ(288px);
}

.carousel__cell:nth-child(2) {
    transform: rotateY(40deg) translateZ(288px);
}

.carousel__cell:nth-child(3) {
    transform: rotateY(80deg) translateZ(288px);
}

.carousel__cell:nth-child(4) {
    transform: rotateY(120deg) translateZ(288px);
}

.carousel__cell:nth-child(5) {
    transform: rotateY(160deg) translateZ(288px);
}

.carousel__cell:nth-child(6) {
    transform: rotateY(200deg) translateZ(288px);
}

.carousel__cell:nth-child(7) {
    transform: rotateY(240deg) translateZ(288px);
}

.carousel__cell:nth-child(8) {
    transform: rotateY(280deg) translateZ(288px);
}

.carousel__cell:nth-child(9) {
    transform: rotateY(320deg) translateZ(288px);
}

*/

.carousel-options {
    text-align: center;
    position: relative;
    z-index: 2;
    background: hsla(0, 0%, 100%, 0.8);
}

/* Carousel avec les photos: TEST: */

.carousel__cell img {
    position: absolute;
    width: 190px;
    height: 120px;
    left: 10px;
    top: 10px;
    border: 2px solid black;
    line-height: 116px;
    font-size: 80px;
    font-weight: bold;
    color: white;
    text-align: center;
    transition: transform 1s, opacity 1s;
}
</style>
{% endblock %}

{% block body %}

<div class="container-fluid">
    <div class="scene">
        <div class="carousel">
            <div class="carousel__cell"><img src="images/evg-evjf.png"></div>
            <div class="carousel__cell" id="img1"><img src="images/FB2020Logo.png"></div>
            <div class="carousel__cell" id="img2"><img src="images/casino.jpg"></div>
            <div class="carousel__cell" id="img3"><img src="images/cocktail.jpg"></div>
            <div class="carousel__cell" id="img4"><img src="images/lcdp.jpg"></div>
            <div class="carousel__cell" id="img5"><img src="images/kermesse.jpg"></div>
            <div class="carousel__cell" id="img6"><img src="images/Jeremy.jpg"></div>
            <div class="carousel__cell" id="img7"><img src="images/guitarelive.jpg"></div>
            <div class="carousel__cell" id="img8"><img src="images/guirare_cours.jpg"></div>
        </div>
    </div>

    <div class="carousel-options">
        <p>
            <label>
                <!-- Cells -->
                <input class="cells-range" type="range" min="3" max="15" value="9" />
            </label>
        </p>
        <p>
            <button class="previous-button">Previous</button>
            <button class="next-button">Next</button>
        </p>
        <p>
            Orientation:
            <label>
                <input type="radio" name="orientation" value="horizontal" checked />
                horizontal
            </label>
            <label>
                <input type="radio" name="orientation" value="vertical" />
                vertical
            </label>
        </p>
    </div>
    <div style="display:none" id="readIdImage"></div>
    <div class="container">
        <h1 style="text-align:center;"> Titre de l'animation </h1>
    </div>
    <div class="container-fluid">
    SCENARIO :
    Une soirée chic en perspective, tout le monde a revêtu sa plus belle tenue pour honorer votre invitation.
    Convivialité et amusement sont les maitres mots... L'agent secret qui sommeille en vous parviendra t'il 
    toutefois à trouver et désamorcer la bombe cachée parmi les convives ?   
    </div>
    <div class="container-fluid">
    CARACTÉRISTIQUES TECHNIQUES :
    Jeu individuel avec de l'argent factice, offert à chacun, en début de soirée. Chacun 
    évolue librement au cours de la soirée. L'objectif étant de faire fructifier ses jetons et de créer une 
    « compétition » entre les invités.
    </div>
    <div class="container-fluid">
    JEUX : Big Ben, Roulette Russe, Opération Commando, Course Poursuite, Compte à Rebours... 
    1 animateur dans la soirée.
    Montage et démontage inclus
    </div>
</div>

{% endblock %}

{% block javascripts %}

<script>
/* EXEMPLE CAROUSSELD POUR MON SITE - TEST
// On récupère dans la variable:
    - "carousel" : l'intégralité de la div parent qui contient toutes les div enfants de photo
    - "cells" : collection des cellules (l'intégralité des div enfants dans un tableau array)
    - "cellCount" :  définit le nombre de cellule désirée, on affecte la value de cells-range définit dans les options carousels html
    - "selectedIndex" : définit l'index de lecture de la cellule actuelle
    - "cellWidth = carousel.offsetWidth" : propriété en lecture seule qui renvoie la largeur totale d'un élément
    - "cellHeight = carousel.offsetHeight" : propriété en lecture seule, elle renvoie la hauteur totale d'un élément
*/
var carousel = document.querySelector('.carousel');
var cells = carousel.querySelectorAll('.carousel__cell');
var cellCount; 
var selectedIndex = 0;
console.log(selectedIndex);
var cellWidth = carousel.offsetWidth;
var cellHeight = carousel.offsetHeight;
var isHorizontal = true;
var rotateFn = isHorizontal ? 'rotateY' : 'rotateX';
var radius, theta;
console.log(cellWidth, cellHeight);

function rotateCarousel() {
    var angle = theta * selectedIndex * -1; /* Si index=0 on a angle = (360/9) * 0 *-1   */
    carousel.style.transform = 'translateZ(' + -radius + 'px) ' +
        rotateFn + '(' + angle + 'deg)';
}

var prevButton = document.querySelector('.previous-button');
prevButton.addEventListener('click', function() {
    selectedIndex--;
    rotateCarousel();
});

var nextButton = document.querySelector('.next-button');
nextButton.addEventListener('click', function() {
    selectedIndex++;
    rotateCarousel();
});

var cellsRange = document.querySelector('.cells-range');
cellsRange.addEventListener('change', changeCarousel);
cellsRange.addEventListener('input', changeCarousel);

/* 
    - "theta" : définit l'angle de rotation 360 / nombre de cellules dispo au visionnage
    - "cellSize" = isHorizontal ? cellWidth : cellHeight : si le booleen isHorizontal est true, cellSize= largeur sinon hauteur

*/

/* Cette fonction rend le carousel en 3D et s'occupe de la rotation de celui ci*/
function changeCarousel() {
    cellCount = cellsRange.value;
    theta = 360 / cellCount;
    var cellSize = isHorizontal ? cellWidth : cellHeight;
    radius = Math.round((cellSize / 2) / Math.tan(Math.PI / cellCount));
    for (var i = 0; i < cells.length; i++) {
        var cell = cells[i];
        if (i < cellCount) {
            // visible cell
            cell.style.opacity = 1;
            var cellAngle = theta * i;
            cell.style.transform = rotateFn + '(' + cellAngle + 'deg) translateZ(' + radius + 'px)';
        } else {
            // hidden cell
            cell.style.opacity = 0;
            cell.style.transform = 'none';
        }
    }

    rotateCarousel();
}

var orientationRadios = document.querySelectorAll('input[name="orientation"]');
(function() {
    for (var i = 0; i < orientationRadios.length; i++) {
        var radio = orientationRadios[i];
        radio.addEventListener('change', onOrientationChange);
    }
})();


/* Cette fonction changer */
function onOrientationChange() {
    var checkedRadio = document.querySelector('input[name="orientation"]:checked'); 
    // on déclare une variable checkedRadio, querySelector va chercher la valeur du 1er argument du document respectant la condition:
    // Premiere balise "input" ayant été cliqué (":checked") et ayant pour nom "orientation" 

    isHorizontal = checkedRadio.value == 'horizontal';
    rotateFn = isHorizontal ? 'rotateY' : 'rotateX'; // Si le carousel est horizontal, la rotation se fera
    changeCarousel();
}

// set initials
onOrientationChange();

{# Récuperation des infos de l'animation selectionnée du carousel avecc JS : #}
document.getElementById('readIdImage');



</script>

{% endblock %}


